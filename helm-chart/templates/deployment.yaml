---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-app"
  labels:
    {{- include "allure.labels" . | nindent 4 }}
spec:
  serviceAccountName: "{{ .Release.Name }}-sa"
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      {{- include "allure.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
      labels:
        {{- include "allure.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: CHECK_RESULTS_EVERY_SECONDS
          value: {{ .Values.check_results_every_seconds | quote }}
        - name: KEEP_HISTORY
          value: {{ .Values.keep_history | quote }}
        - name: KEEP_HISTORY_LATEST
          value: {{ .Values.keep_history_latest | quote }}
        - name: MAKE_VIEWER_ENDPOINTS_PUBLIC
          value: {{ .Values.make_viewer_endpoints_public | quote }}
        - name: SECURITY_ENABLED
          value: {{ .Values.security.enabled | quote }}
        {{- if .Values.security.secret }}
        - name: SECURITY_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.security.secret }}
              key: username
        - name: SECURITY_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.security.secret }}
              key: password
        {{- else }}
        - name: SECURITY_PASS
          value: {{ .Values.security.password | quote }}
        - name: SECURITY_USER
          value: {{ .Values.security.user | quote }}
        {{- end }}
        image: "{{ .Values.image_repository }}/{{ .Values.image_name }}/{{ .Values.image_namespace }}:{{ .Values.image_version }}"
        imagePullPolicy: Always
        name: allure
        ports:
        - containerPort: 5050
          protocol: TCP
        resources:
{{ toYaml .Values.resources | indent 12 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app/allure-results
          name: allure-docker-service-volume-1
        - mountPath: /app/projects
          name: allure-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: allure-docker-service-volume-1
      - name: allure-data
        persistentVolumeClaim:
          claimName: "{{ .Release.Name }}-data"
